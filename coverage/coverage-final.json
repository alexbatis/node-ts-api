{"/Users/alexbatis/Desktop/node-express-ts/src/app.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":14},"end":{"line":11,"column":38}},"10":{"start":{"line":12,"column":13},"end":{"line":12,"column":28}},"11":{"start":{"line":13,"column":17},"end":{"line":13,"column":36}},"12":{"start":{"line":14,"column":17},"end":{"line":14,"column":36}},"13":{"start":{"line":15,"column":25},"end":{"line":15,"column":53}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":36}},"15":{"start":{"line":17,"column":19},"end":{"line":17,"column":33}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"17":{"start":{"line":21,"column":23},"end":{"line":21,"column":52}},"18":{"start":{"line":22,"column":23},"end":{"line":22,"column":52}},"19":{"start":{"line":23,"column":22},"end":{"line":23,"column":50}},"20":{"start":{"line":24,"column":26},"end":{"line":24,"column":58}},"21":{"start":{"line":25,"column":23},"end":{"line":25,"column":52}},"22":{"start":{"line":26,"column":23},"end":{"line":26,"column":52}},"23":{"start":{"line":28,"column":23},"end":{"line":28,"column":51}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":21}},"25":{"start":{"line":32,"column":17},"end":{"line":32,"column":41}},"26":{"start":{"line":33,"column":0},"end":{"line":33,"column":28}},"27":{"start":{"line":34,"column":0},"end":{"line":37,"column":3}},"28":{"start":{"line":35,"column":4},"end":{"line":35,"column":89}},"29":{"start":{"line":39,"column":0},"end":{"line":39,"column":42}},"30":{"start":{"line":40,"column":0},"end":{"line":40,"column":51}},"31":{"start":{"line":41,"column":0},"end":{"line":41,"column":30}},"32":{"start":{"line":42,"column":0},"end":{"line":42,"column":23}},"33":{"start":{"line":43,"column":0},"end":{"line":43,"column":23}},"34":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}},"35":{"start":{"line":45,"column":0},"end":{"line":45,"column":51}},"36":{"start":{"line":46,"column":0},"end":{"line":46,"column":28}},"37":{"start":{"line":47,"column":0},"end":{"line":55,"column":4}},"38":{"start":{"line":56,"column":0},"end":{"line":56,"column":31}},"39":{"start":{"line":57,"column":0},"end":{"line":57,"column":28}},"40":{"start":{"line":58,"column":0},"end":{"line":58,"column":17}},"41":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}},"42":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}},"43":{"start":{"line":61,"column":0},"end":{"line":64,"column":3}},"44":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"45":{"start":{"line":63,"column":4},"end":{"line":63,"column":11}},"46":{"start":{"line":65,"column":0},"end":{"line":79,"column":3}},"47":{"start":{"line":67,"column":4},"end":{"line":77,"column":5}},"48":{"start":{"line":72,"column":8},"end":{"line":72,"column":40}},"49":{"start":{"line":74,"column":9},"end":{"line":77,"column":5}},"50":{"start":{"line":76,"column":8},"end":{"line":76,"column":40}},"51":{"start":{"line":78,"column":4},"end":{"line":78,"column":11}},"52":{"start":{"line":80,"column":0},"end":{"line":80,"column":81}},"53":{"start":{"line":84,"column":0},"end":{"line":84,"column":35}},"54":{"start":{"line":85,"column":0},"end":{"line":85,"column":43}},"55":{"start":{"line":86,"column":0},"end":{"line":86,"column":45}},"56":{"start":{"line":87,"column":0},"end":{"line":87,"column":42}},"57":{"start":{"line":88,"column":0},"end":{"line":88,"column":45}},"58":{"start":{"line":89,"column":0},"end":{"line":89,"column":47}},"59":{"start":{"line":90,"column":0},"end":{"line":90,"column":50}},"60":{"start":{"line":91,"column":0},"end":{"line":91,"column":52}},"61":{"start":{"line":92,"column":0},"end":{"line":92,"column":45}},"62":{"start":{"line":93,"column":0},"end":{"line":93,"column":47}},"63":{"start":{"line":94,"column":0},"end":{"line":94,"column":50}},"64":{"start":{"line":95,"column":0},"end":{"line":95,"column":52}},"65":{"start":{"line":96,"column":0},"end":{"line":96,"column":79}},"66":{"start":{"line":97,"column":0},"end":{"line":97,"column":95}},"67":{"start":{"line":98,"column":0},"end":{"line":98,"column":97}},"68":{"start":{"line":99,"column":0},"end":{"line":99,"column":94}},"69":{"start":{"line":100,"column":0},"end":{"line":100,"column":100}},"70":{"start":{"line":104,"column":0},"end":{"line":104,"column":38}},"71":{"start":{"line":105,"column":0},"end":{"line":105,"column":113}},"72":{"start":{"line":109,"column":0},"end":{"line":109,"column":41}},"73":{"start":{"line":110,"column":0},"end":{"line":110,"column":43}},"74":{"start":{"line":114,"column":0},"end":{"line":114,"column":43}},"75":{"start":{"line":115,"column":0},"end":{"line":115,"column":47}},"76":{"start":{"line":116,"column":0},"end":{"line":116,"column":49}},"77":{"start":{"line":117,"column":0},"end":{"line":117,"column":49}},"78":{"start":{"line":118,"column":0},"end":{"line":118,"column":55}},"79":{"start":{"line":122,"column":0},"end":{"line":122,"column":101}},"80":{"start":{"line":123,"column":0},"end":{"line":125,"column":3}},"81":{"start":{"line":124,"column":4},"end":{"line":124,"column":46}},"82":{"start":{"line":126,"column":0},"end":{"line":126,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":34,"column":58},"end":{"line":34,"column":59}},"loc":{"start":{"line":34,"column":64},"end":{"line":34,"column":67}},"line":34},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":75},"end":{"line":34,"column":76}},"loc":{"start":{"line":34,"column":82},"end":{"line":37,"column":1}},"line":34},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":8},"end":{"line":61,"column":9}},"loc":{"start":{"line":61,"column":28},"end":{"line":64,"column":1}},"line":61},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":8},"end":{"line":65,"column":9}},"loc":{"start":{"line":65,"column":28},"end":{"line":79,"column":1}},"line":65},"4":{"name":"(anonymous_4)","decl":{"start":{"line":123,"column":101},"end":{"line":123,"column":102}},"loc":{"start":{"line":123,"column":115},"end":{"line":125,"column":1}},"line":123}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":40}},"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":32}},{"start":{"line":39,"column":36},"end":{"line":39,"column":40}}],"line":39},"1":{"loc":{"start":{"line":67,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":77,"column":5}},{"start":{"line":67,"column":4},"end":{"line":77,"column":5}}],"line":67},"2":{"loc":{"start":{"line":67,"column":8},"end":{"line":71,"column":29}},"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":17}},{"start":{"line":68,"column":8},"end":{"line":68,"column":29}},{"start":{"line":69,"column":8},"end":{"line":69,"column":30}},{"start":{"line":70,"column":8},"end":{"line":70,"column":34}},{"start":{"line":71,"column":8},"end":{"line":71,"column":29}}],"line":67},"3":{"loc":{"start":{"line":74,"column":9},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":9},"end":{"line":77,"column":5}},{"start":{"line":74,"column":9},"end":{"line":77,"column":5}}],"line":74},"4":{"loc":{"start":{"line":74,"column":13},"end":{"line":75,"column":30}},"type":"binary-expr","locations":[{"start":{"line":74,"column":13},"end":{"line":74,"column":21}},{"start":{"line":75,"column":8},"end":{"line":75,"column":30}}],"line":74},"5":{"loc":{"start":{"line":124,"column":17},"end":{"line":124,"column":44}},"type":"binary-expr","locations":[{"start":{"line":124,"column":17},"end":{"line":124,"column":37}},{"start":{"line":124,"column":41},"end":{"line":124,"column":44}}],"line":124}},"s":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":5,"10":5,"11":5,"12":5,"13":5,"14":5,"15":5,"16":5,"17":5,"18":5,"19":5,"20":5,"21":5,"22":5,"23":5,"24":5,"25":5,"26":5,"27":5,"28":0,"29":5,"30":5,"31":5,"32":5,"33":5,"34":5,"35":5,"36":5,"37":5,"38":5,"39":5,"40":5,"41":5,"42":5,"43":5,"44":8,"45":8,"46":5,"47":8,"48":5,"49":3,"50":0,"51":8,"52":5,"53":5,"54":5,"55":5,"56":5,"57":5,"58":5,"59":5,"60":5,"61":5,"62":5,"63":5,"64":5,"65":5,"66":5,"67":5,"68":5,"69":5,"70":5,"71":5,"72":5,"73":5,"74":5,"75":5,"76":5,"77":5,"78":5,"79":5,"80":5,"81":0,"82":5},"f":{"0":5,"1":0,"2":8,"3":8,"4":0},"b":{"0":[5,5],"1":[5,3],"2":[8,8,6,5,5],"3":[0,3],"4":[3,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\nimport * as compression from \"compression\";  // compresses requests\nimport * as session from \"express-session\";\nimport * as bodyParser from \"body-parser\";\nimport * as logger from \"morgan\";\nimport * as lusca from \"lusca\";\nimport * as dotenv from \"dotenv\";\nimport * as mongo from \"connect-mongo\";\nimport * as flash from \"express-flash\";\nimport * as path from \"path\";\nimport * as mongoose from \"mongoose\";\nimport * as passport from \"passport\";\nimport * as expressValidator from \"express-validator\";\nimport * as bluebird from \"bluebird\";\n\nconst MongoStore = mongo(session);\n\n// Load environment variables from .env file, where API keys and passwords are configured\ndotenv.config({ path: \".env.example\" });\n\n// Controllers (route handlers)\nimport * as homeController from \"./controllers/home\";\nimport * as userController from \"./controllers/user\";\nimport * as apiController from \"./controllers/api\";\nimport * as contactController from \"./controllers/contact\";\nimport * as testController from \"./controllers/test\";\nimport * as todoController from \"./controllers/todo\";\n\n\n// API keys and Passport configuration\nimport * as passportConfig from \"./config/passport\";\n\n// Create Express server\nconst app = express();\n\n// Connect to MongoDB\nconst mongoUrl = process.env.MONGOLAB_URI;\n(<any>mongoose).Promise = bluebird;\nmongoose.connect(mongoUrl, { useMongoClient: true }).then(\n  () => { /** ready to use. The `mongoose.connect()` promise resolves to undefined. */ },\n).catch(err => {\n  console.log(\"MongoDB connection error. Please make sure MongoDB is running. \" + err);\n  // process.exit();\n});\n\n// Express configuration\napp.set(\"port\", process.env.PORT || 3000);\napp.set(\"views\", path.join(__dirname, \"../views\"));\napp.set(\"view engine\", \"pug\");\napp.use(compression());\napp.use(logger(\"dev\"));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET,\n  store: new MongoStore({\n    url: mongoUrl,\n    autoReconnect: true\n  })\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\napp.use(lusca.xframe(\"SAMEORIGIN\"));\napp.use(lusca.xssProtection(true));\napp.use((req, res, next) => {\n  res.locals.user = req.user;\n  next();\n});\napp.use((req, res, next) => {\n  // After successful login, redirect back to the intended page\n  if (!req.user &&\n    req.path !== \"/login\" &&\n    req.path !== \"/signup\" &&\n    !req.path.match(/^\\/auth/) &&\n    !req.path.match(/\\./)) {\n    req.session.returnTo = req.path;\n  } else if (req.user &&\n    req.path == \"/account\") {\n    req.session.returnTo = req.path;\n  }\n  next();\n});\napp.use(express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 }));\n\n/**\n * Primary app routes.\n */\napp.get(\"/\", homeController.index);\napp.get(\"/login\", userController.getLogin);\napp.post(\"/login\", userController.postLogin);\napp.get(\"/logout\", userController.logout);\napp.get(\"/forgot\", userController.getForgot);\napp.post(\"/forgot\", userController.postForgot);\napp.get(\"/reset/:token\", userController.getReset);\napp.post(\"/reset/:token\", userController.postReset);\napp.get(\"/signup\", userController.getSignup);\napp.post(\"/signup\", userController.postSignup);\napp.get(\"/contact\", contactController.getContact);\napp.post(\"/contact\", contactController.postContact);\napp.get(\"/account\", passportConfig.isAuthenticated, userController.getAccount);\napp.post(\"/account/profile\", passportConfig.isAuthenticated, userController.postUpdateProfile);\napp.post(\"/account/password\", passportConfig.isAuthenticated, userController.postUpdatePassword);\napp.post(\"/account/delete\", passportConfig.isAuthenticated, userController.postDeleteAccount);\napp.get(\"/account/unlink/:provider\", passportConfig.isAuthenticated, userController.getOauthUnlink);\n\n/**\n * API examples routes.\n */\napp.get(\"/api\", apiController.getApi);\napp.get(\"/api/facebook\", passportConfig.isAuthenticated, passportConfig.isAuthorized, apiController.getFacebook);\n\n/**\n * test examples routes.\n */\napp.get(\"/test\", testController.getTest);\napp.post(\"/test\", testController.postTest);\n\n/**\n * todos routes.\n */\napp.get(\"/todos\", todoController.getTodos);\napp.post(\"/todo\", todoController.postTodoItem);\napp.get(\"/todo/:id\", todoController.getTodoItem);\napp.put(\"/todo/:id\", todoController.putTodoItem);\napp.delete(\"/todo/:id\", todoController.deleteTodoItem);\n\n\n/**\n * OAuth authentication routes. (Sign in)\n */\napp.get(\"/auth/facebook\", passport.authenticate(\"facebook\", { scope: [\"email\", \"public_profile\"] }));\napp.get(\"/auth/facebook/callback\", passport.authenticate(\"facebook\", { failureRedirect: \"/login\" }), (req, res) => {\n  res.redirect(req.session.returnTo || \"/\");\n});\n\nmodule.exports = app;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"50d56a6f1058f84ac08c4802eccb69195b934852"}
,"/Users/alexbatis/Desktop/node-express-ts/src/config/passport.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/config/passport.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":10},"end":{"line":6,"column":27}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":22},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":50}},"8":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"10":{"start":{"line":14,"column":0},"end":{"line":18,"column":3}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"13":{"start":{"line":22,"column":0},"end":{"line":40,"column":4}},"14":{"start":{"line":23,"column":4},"end":{"line":39,"column":7}},"15":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":29}},"17":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":84}},"19":{"start":{"line":30,"column":8},"end":{"line":38,"column":11}},"20":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"21":{"start":{"line":32,"column":16},"end":{"line":32,"column":33}},"22":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"23":{"start":{"line":35,"column":16},"end":{"line":35,"column":45}},"24":{"start":{"line":37,"column":12},"end":{"line":37,"column":85}},"25":{"start":{"line":58,"column":0},"end":{"line":124,"column":4}},"26":{"start":{"line":65,"column":4},"end":{"line":123,"column":5}},"27":{"start":{"line":66,"column":8},"end":{"line":90,"column":11}},"28":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"29":{"start":{"line":68,"column":16},"end":{"line":68,"column":33}},"30":{"start":{"line":70,"column":12},"end":{"line":89,"column":13}},"31":{"start":{"line":71,"column":16},"end":{"line":71,"column":185}},"32":{"start":{"line":72,"column":16},"end":{"line":72,"column":26}},"33":{"start":{"line":75,"column":16},"end":{"line":88,"column":19}},"34":{"start":{"line":76,"column":20},"end":{"line":78,"column":21}},"35":{"start":{"line":77,"column":24},"end":{"line":77,"column":41}},"36":{"start":{"line":79,"column":20},"end":{"line":79,"column":47}},"37":{"start":{"line":80,"column":20},"end":{"line":80,"column":72}},"38":{"start":{"line":81,"column":20},"end":{"line":81,"column":116}},"39":{"start":{"line":82,"column":20},"end":{"line":82,"column":86}},"40":{"start":{"line":83,"column":20},"end":{"line":83,"column":129}},"41":{"start":{"line":84,"column":20},"end":{"line":87,"column":23}},"42":{"start":{"line":85,"column":24},"end":{"line":85,"column":88}},"43":{"start":{"line":86,"column":24},"end":{"line":86,"column":40}},"44":{"start":{"line":93,"column":8},"end":{"line":122,"column":11}},"45":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"46":{"start":{"line":95,"column":16},"end":{"line":95,"column":33}},"47":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"48":{"start":{"line":98,"column":16},"end":{"line":98,"column":53}},"49":{"start":{"line":100,"column":12},"end":{"line":121,"column":15}},"50":{"start":{"line":101,"column":16},"end":{"line":103,"column":17}},"51":{"start":{"line":102,"column":20},"end":{"line":102,"column":37}},"52":{"start":{"line":104,"column":16},"end":{"line":120,"column":17}},"53":{"start":{"line":105,"column":20},"end":{"line":105,"column":188}},"54":{"start":{"line":106,"column":20},"end":{"line":106,"column":30}},"55":{"start":{"line":109,"column":33},"end":{"line":109,"column":53}},"56":{"start":{"line":110,"column":20},"end":{"line":110,"column":53}},"57":{"start":{"line":111,"column":20},"end":{"line":111,"column":47}},"58":{"start":{"line":112,"column":20},"end":{"line":112,"column":72}},"59":{"start":{"line":113,"column":20},"end":{"line":113,"column":95}},"60":{"start":{"line":114,"column":20},"end":{"line":114,"column":63}},"61":{"start":{"line":115,"column":20},"end":{"line":115,"column":105}},"62":{"start":{"line":116,"column":20},"end":{"line":116,"column":104}},"63":{"start":{"line":117,"column":20},"end":{"line":119,"column":23}},"64":{"start":{"line":118,"column":24},"end":{"line":118,"column":40}},"65":{"start":{"line":128,"column":0},"end":{"line":133,"column":2}},"66":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"67":{"start":{"line":130,"column":8},"end":{"line":130,"column":22}},"68":{"start":{"line":132,"column":4},"end":{"line":132,"column":27}},"69":{"start":{"line":137,"column":0},"end":{"line":145,"column":2}},"70":{"start":{"line":138,"column":21},"end":{"line":138,"column":53}},"71":{"start":{"line":139,"column":4},"end":{"line":144,"column":5}},"72":{"start":{"line":140,"column":8},"end":{"line":140,"column":15}},"73":{"start":{"line":143,"column":8},"end":{"line":143,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":23},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":39},"end":{"line":13,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":25},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":39},"end":{"line":18,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"loc":{"start":{"line":15,"column":47},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":59},"end":{"line":22,"column":60}},"loc":{"start":{"line":22,"column":86},"end":{"line":40,"column":1}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":59},"end":{"line":23,"column":60}},"loc":{"start":{"line":23,"column":74},"end":{"line":39,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":39},"end":{"line":30,"column":40}},"loc":{"start":{"line":30,"column":57},"end":{"line":38,"column":9}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":64,"column":3},"end":{"line":64,"column":4}},"loc":{"start":{"line":64,"column":54},"end":{"line":124,"column":1}},"line":64},"7":{"name":"(anonymous_7)","decl":{"start":{"line":66,"column":57},"end":{"line":66,"column":58}},"loc":{"start":{"line":66,"column":80},"end":{"line":90,"column":9}},"line":66},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":53},"end":{"line":75,"column":54}},"loc":{"start":{"line":75,"column":68},"end":{"line":88,"column":17}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":84,"column":30},"end":{"line":84,"column":31}},"loc":{"start":{"line":84,"column":39},"end":{"line":87,"column":21}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":57},"end":{"line":93,"column":58}},"loc":{"start":{"line":93,"column":80},"end":{"line":122,"column":9}},"line":93},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":67},"end":{"line":100,"column":68}},"loc":{"start":{"line":100,"column":95},"end":{"line":121,"column":13}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":117,"column":30},"end":{"line":117,"column":31}},"loc":{"start":{"line":117,"column":39},"end":{"line":119,"column":21}},"line":117},"13":{"name":"(anonymous_13)","decl":{"start":{"line":128,"column":26},"end":{"line":128,"column":27}},"loc":{"start":{"line":128,"column":46},"end":{"line":133,"column":1}},"line":128},"14":{"name":"(anonymous_14)","decl":{"start":{"line":137,"column":23},"end":{"line":137,"column":24}},"loc":{"start":{"line":137,"column":43},"end":{"line":145,"column":1}},"line":137}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"1":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}],"line":31},"3":{"loc":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},{"start":{"line":34,"column":12},"end":{"line":36,"column":13}}],"line":34},"4":{"loc":{"start":{"line":65,"column":4},"end":{"line":123,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":123,"column":5}},{"start":{"line":65,"column":4},"end":{"line":123,"column":5}}],"line":65},"5":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"6":{"loc":{"start":{"line":70,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":89,"column":13}},{"start":{"line":70,"column":12},"end":{"line":89,"column":13}}],"line":70},"7":{"loc":{"start":{"line":76,"column":20},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":76,"column":20},"end":{"line":78,"column":21}},{"start":{"line":76,"column":20},"end":{"line":78,"column":21}}],"line":76},"8":{"loc":{"start":{"line":81,"column":40},"end":{"line":81,"column":115}},"type":"binary-expr","locations":[{"start":{"line":81,"column":40},"end":{"line":81,"column":57}},{"start":{"line":81,"column":61},"end":{"line":81,"column":115}}],"line":81},"9":{"loc":{"start":{"line":82,"column":42},"end":{"line":82,"column":85}},"type":"binary-expr","locations":[{"start":{"line":82,"column":42},"end":{"line":82,"column":61}},{"start":{"line":82,"column":65},"end":{"line":82,"column":85}}],"line":82},"10":{"loc":{"start":{"line":83,"column":43},"end":{"line":83,"column":128}},"type":"binary-expr","locations":[{"start":{"line":83,"column":43},"end":{"line":83,"column":63}},{"start":{"line":83,"column":67},"end":{"line":83,"column":128}}],"line":83},"11":{"loc":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},{"start":{"line":94,"column":12},"end":{"line":96,"column":13}}],"line":94},"12":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"13":{"loc":{"start":{"line":101,"column":16},"end":{"line":103,"column":17}},"type":"if","locations":[{"start":{"line":101,"column":16},"end":{"line":103,"column":17}},{"start":{"line":101,"column":16},"end":{"line":103,"column":17}}],"line":101},"14":{"loc":{"start":{"line":104,"column":16},"end":{"line":120,"column":17}},"type":"if","locations":[{"start":{"line":104,"column":16},"end":{"line":120,"column":17}},{"start":{"line":104,"column":16},"end":{"line":120,"column":17}}],"line":104},"15":{"loc":{"start":{"line":116,"column":44},"end":{"line":116,"column":103}},"type":"cond-expr","locations":[{"start":{"line":116,"column":71},"end":{"line":116,"column":98}},{"start":{"line":116,"column":101},"end":{"line":116,"column":103}}],"line":116},"16":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{"line":129,"column":4},"end":{"line":131,"column":5}}],"line":129},"17":{"loc":{"start":{"line":139,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":144,"column":5}},{"start":{"line":139,"column":4},"end":{"line":144,"column":5}}],"line":139}},"s":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":0,"10":5,"11":0,"12":0,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":5,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":5,"66":0,"67":0,"68":0,"69":5,"70":0,"71":0,"72":0,"73":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"passport.js","sourceRoot":"","sources":["passport.ts"],"names":[],"mappings":"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","sourcesContent":["import * as passport from \"passport\";\nimport * as request from \"request\";\nimport * as passportLocal from \"passport-local\";\nimport * as passportFacebook from \"passport-facebook\";\nimport * as _ from \"lodash\";\n\n// import { User, UserType } from '../models/User';\nimport { default as User } from \"../models/mongo/User\";\nimport { Request, Response, NextFunction } from \"express\";\n\nconst LocalStrategy = passportLocal.Strategy;\nconst FacebookStrategy = passportFacebook.Strategy;\n\npassport.serializeUser<any, any>((user, done) => {\n  done(undefined, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.findById(id, (err, user) => {\n    done(err, user);\n  });\n});\n\n\n/**\n * Sign in using Email and Password.\n */\npassport.use(new LocalStrategy({ usernameField: \"email\" }, (email, password, done) => {\n  User.findOne({ email: email.toLowerCase() }, (err, user: any) => {\n    if (err) { return done(err); }\n    if (!user) {\n      return done(undefined, false, { message: `Email ${email} not found.` });\n    }\n    user.comparePassword(password, (err: Error, isMatch: boolean) => {\n      if (err) { return done(err); }\n      if (isMatch) {\n        return done(undefined, user);\n      }\n      return done(undefined, false, { message: \"Invalid email or password.\" });\n    });\n  });\n}));\n\n\n/**\n * OAuth Strategy Overview\n *\n * - User is already logged in.\n *   - Check if there is an existing account with a provider id.\n *     - If there is, return an error message. (Account merging not supported)\n *     - Else link new OAuth account with currently logged-in user.\n * - User is not logged in.\n *   - Check if it's a returning user.\n *     - If returning user, sign in and we are done.\n *     - Else check if there is an existing account with user's email.\n *       - If there is, return an error message.\n *       - Else create a new account.\n */\n\n\n/**\n * Sign in with Facebook.\n */\npassport.use(new FacebookStrategy({\n  clientID: process.env.FACEBOOK_ID,\n  clientSecret: process.env.FACEBOOK_SECRET,\n  callbackURL: \"/auth/facebook/callback\",\n  profileFields: [\"name\", \"email\", \"link\", \"locale\", \"timezone\"],\n  passReqToCallback: true\n}, (req: any, accessToken, refreshToken, profile, done) => {\n  if (req.user) {\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\n      if (err) { return done(err); }\n      if (existingUser) {\n        req.flash(\"errors\", { msg: \"There is already a Facebook account that belongs to you. Sign in with that account or delete it, then link it with your current account.\" });\n        done(err);\n      } else {\n        User.findById(req.user.id, (err, user: any) => {\n          if (err) { return done(err); }\n          user.facebook = profile.id;\n          user.tokens.push({ kind: \"facebook\", accessToken });\n          user.profile.name = user.profile.name || `${profile.name.givenName} ${profile.name.familyName}`;\n          user.profile.gender = user.profile.gender || profile._json.gender;\n          user.profile.picture = user.profile.picture || `https://graph.facebook.com/${profile.id}/picture?type=large`;\n          user.save((err: Error) => {\n            req.flash(\"info\", { msg: \"Facebook account has been linked.\" });\n            done(err, user);\n          });\n        });\n      }\n    });\n  } else {\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\n      if (err) { return done(err); }\n      if (existingUser) {\n        return done(undefined, existingUser);\n      }\n      User.findOne({ email: profile._json.email }, (err, existingEmailUser) => {\n        if (err) { return done(err); }\n        if (existingEmailUser) {\n          req.flash(\"errors\", { msg: \"There is already an account using this email address. Sign in to that account and link it with Facebook manually from Account Settings.\" });\n          done(err);\n        } else {\n          const user: any = new User();\n          user.email = profile._json.email;\n          user.facebook = profile.id;\n          user.tokens.push({ kind: \"facebook\", accessToken });\n          user.profile.name = `${profile.name.givenName} ${profile.name.familyName}`;\n          user.profile.gender = profile._json.gender;\n          user.profile.picture = `https://graph.facebook.com/${profile.id}/picture?type=large`;\n          user.profile.location = (profile._json.location) ? profile._json.location.name : \"\";\n          user.save((err: Error) => {\n            done(err, user);\n          });\n        }\n      });\n    });\n  }\n}));\n\n/**\n * Login Required middleware.\n */\nexport let isAuthenticated = (req: Request, res: Response, next: NextFunction) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.redirect(\"/login\");\n};\n\n/**\n * Authorization Required middleware.\n */\nexport let isAuthorized = (req: Request, res: Response, next: NextFunction) => {\n  const provider = req.path.split(\"/\").slice(-1)[0];\n\n  if (_.find(req.user.tokens, { kind: provider })) {\n    next();\n  } else {\n    res.redirect(`/auth/${provider}`);\n  }\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"93184d6af454f424ca7ddc10257b10893166d11e"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/api.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":11,"column":7}},"4":{"start":{"line":17,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":18,"column":18},"end":{"line":18,"column":76}},"6":{"start":{"line":18,"column":50},"end":{"line":18,"column":75}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"8":{"start":{"line":20,"column":4},"end":{"line":28,"column":7}},"9":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},"11":{"start":{"line":24,"column":8},"end":{"line":27,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":31},"end":{"line":12,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":22},"end":{"line":17,"column":23}},"loc":{"start":{"line":17,"column":42},"end":{"line":29,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":39},"end":{"line":18,"column":40}},"loc":{"start":{"line":18,"column":50},"end":{"line":18,"column":75}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":108},"end":{"line":20,"column":109}},"loc":{"start":{"line":20,"column":126},"end":{"line":28,"column":5}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21}},"s":{"0":5,"1":5,"2":5,"3":1,"4":5,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,iCAAiC;AAIjC;;;GAGG;AACQ,QAAA,MAAM,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAClD,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE;QACtB,KAAK,EAAE,cAAc;KACtB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;IAC9E,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACxC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,wEAAwE,EAAE,CAAC,GAAU,EAAE,OAA2B,EAAE,EAAE;QAClJ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QAC9B,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE;YACzB,KAAK,EAAE,cAAc;YACrB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["\"use strict\";\n\nimport * as async from \"async\";\nimport * as request from \"request\";\nimport * as graph from \"fbgraph\";\nimport { Response, Request, NextFunction } from \"express\";\n\n\n/**\n * GET /api\n * List of API examples.\n */\nexport let getApi = (req: Request, res: Response) => {\n  res.render(\"api/index\", {\n    title: \"API Examples\"\n  });\n};\n\n/**\n * GET /api/facebook\n * Facebook API example.\n */\nexport let getFacebook = (req: Request, res: Response, next: NextFunction) => {\n  const token = req.user.tokens.find((token: any) => token.kind === \"facebook\");\n  graph.setAccessToken(token.accessToken);\n  graph.get(`${req.user.facebook}?fields=id,name,email,first_name,last_name,gender,link,locale,timezone`, (err: Error, results: graph.FacebookUser) => {\n    if (err) { return next(err); }\n    res.render(\"api/facebook\", {\n      title: \"Facebook API\",\n      profile: results\n    });\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"45dd40223f88c7003bda7e31ad13ff1afa649675"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/contact.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/contact.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":20},"end":{"line":10,"column":2}},"3":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"5":{"start":{"line":24,"column":0},"end":{"line":47,"column":2}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":58}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":64}},"9":{"start":{"line":28,"column":19},"end":{"line":28,"column":41}},"10":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":36}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"13":{"start":{"line":33,"column":24},"end":{"line":38,"column":5}},"14":{"start":{"line":39,"column":4},"end":{"line":46,"column":7}},"15":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":54}},"17":{"start":{"line":42,"column":12},"end":{"line":42,"column":44}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":75}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":21},"end":{"line":15,"column":22}},"loc":{"start":{"line":15,"column":35},"end":{"line":19,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":22},"end":{"line":24,"column":23}},"loc":{"start":{"line":24,"column":36},"end":{"line":47,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":38},"end":{"line":39,"column":39}},"loc":{"start":{"line":39,"column":47},"end":{"line":46,"column":5}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},{"start":{"line":29,"column":4},"end":{"line":32,"column":5}}],"line":29},"1":{"loc":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},{"start":{"line":40,"column":8},"end":{"line":43,"column":9}}],"line":40}},"s":{"0":5,"1":5,"2":5,"3":5,"4":1,"5":5,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"f":{"0":1,"1":1,"2":0},"b":{"0":[1,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"contact.js","sourceRoot":"","sources":["contact.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAGzC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,UAAU;IACnB,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;KACpC;CACF,CAAC,CAAC;AAEH;;;GAGG;AACQ,QAAA,UAAU,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QACpB,KAAK,EAAE,SAAS;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE5D,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,WAAW,GAAG;QAClB,EAAE,EAAE,gBAAgB;QACpB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG;QAC5C,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KACvB,CAAC;IAEF,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;QACxC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1C,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,mCAAmC,EAAE,CAAC,CAAC;QACnE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import * as nodemailer from \"nodemailer\";\nimport { Request, Response } from \"express\";\n\nconst transporter = nodemailer.createTransport({\n  service: \"SendGrid\",\n  auth: {\n    user: process.env.SENDGRID_USER,\n    pass: process.env.SENDGRID_PASSWORD\n  }\n});\n\n/**\n * GET /contact\n * Contact form page.\n */\nexport let getContact = (req: Request, res: Response) => {\n  res.render(\"contact\", {\n    title: \"Contact\"\n  });\n};\n\n/**\n * POST /contact\n * Send a contact form via Nodemailer.\n */\nexport let postContact = (req: Request, res: Response) => {\n  req.assert(\"name\", \"Name cannot be blank\").notEmpty();\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"message\", \"Message cannot be blank\").notEmpty();\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/contact\");\n  }\n\n  const mailOptions = {\n    to: \"your@email.com\",\n    from: `${req.body.name} <${req.body.email}>`,\n    subject: \"Contact Form\",\n    text: req.body.message\n  };\n\n  transporter.sendMail(mailOptions, (err) => {\n    if (err) {\n      req.flash(\"errors\", { msg: err.message });\n      return res.redirect(\"/contact\");\n    }\n    req.flash(\"success\", { msg: \"Email has been sent successfully!\" });\n    res.redirect(\"/contact\");\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"8454ecb516a950deaf33d6ea171a1d327ecb93c5"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/home.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/home.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":10,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":30},"end":{"line":11,"column":1}},"line":7}},"branchMap":{},"s":{"0":5,"1":5,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"home.js","sourceRoot":"","sources":["home.ts"],"names":[],"mappings":";;AAEA;;;GAGG;AACQ,QAAA,KAAK,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjB,KAAK,EAAE,MAAM;KACd,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\n\n/**\n * GET /\n * Home page.\n */\nexport let index = (req: Request, res: Response) => {\n  res.render(\"home\", {\n    title: \"Home\"\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"1431c8bdda8d8b1925bf7d36e1440081b8484eb6"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/test.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/test.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":40}},"2":{"start":{"line":8,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":9,"column":17},"end":{"line":12,"column":6}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":19}},"5":{"start":{"line":15,"column":0},"end":{"line":25,"column":2}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":78}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":78}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":85}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":78}},"10":{"start":{"line":20,"column":19},"end":{"line":20,"column":41}},"11":{"start":{"line":21,"column":4},"end":{"line":24,"column":25}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":18},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":32},"end":{"line":14,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":19},"end":{"line":15,"column":20}},"loc":{"start":{"line":15,"column":33},"end":{"line":25,"column":1}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":4},"end":{"line":24,"column":25}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":24,"column":25}},{"start":{"line":21,"column":4},"end":{"line":24,"column":25}}],"line":21}},"s":{"0":5,"1":5,"2":5,"3":0,"4":0,"5":5,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"test.js","sourceRoot":"","sources":["test.ts"],"names":[],"mappings":";;AACA,yCAAsC;AAGtC;;;GAGG;AACQ,QAAA,OAAO,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACnD,MAAM,IAAI,GAAS,IAAI,WAAI,CAAC;QAC1B,KAAK,EAAE,yBAAyB;QAChC,MAAM,EAAE,aAAa;KACtB,CAAC,CAAC;IAEH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AAES,QAAA,QAAQ,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACpD,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,4CAA4C,CAAC,CAAC,MAAM,EAAE,CAAC;IAC1E,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,4CAA4C,CAAC,CAAC,MAAM,EAAE,CAAC;IAC1E,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,4CAA4C,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACjF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,4CAA4C,CAAC,CAAC,MAAM,EAAE,CAAC;IAE1E,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IACtC,EAAE,CAAC,CAAC,MAAM,CAAC;QACT,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\nimport { Song } from \"../models/Song\";\n\n\n/**\n * GET /test\n * test api endpoint\n */\nexport let getTest = (req: Request, res: Response) => {\n  const song: Song = new Song({\n    title: \"never gonna give you up\",\n    artist: \"rick astley\"\n  });\n\n  res.send(song);\n};\n\nexport let postTest = (req: Request, res: Response) => {\n  req.checkBody(\"x\", \"must include a field in the body named 'x'\").exists();\n  req.checkBody(\"y\", \"must include a field in the body named 'y'\").exists();\n  req.checkBody(\"y\", \"field y must be at least 4 characters long\").len({ min: 4 });\n  req.checkBody(\"z\", \"must include a field in the body named 'z'\").exists();\n\n  const errors = req.validationErrors();\n  if (errors)\n    res.send(errors).status(400);\n  else\n    res.send(\"nice\");\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"a7f8c967b0dbb45023d4cc0876b4be21e1bdd87c"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/todo.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/todo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":54}},"2":{"start":{"line":8,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":14,"column":7}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":30}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":26}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":30}},"7":{"start":{"line":16,"column":0},"end":{"line":33,"column":2}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":96}},"9":{"start":{"line":18,"column":19},"end":{"line":18,"column":41}},"10":{"start":{"line":19,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":37}},"12":{"start":{"line":22,"column":8},"end":{"line":31,"column":11}},"13":{"start":{"line":23,"column":12},"end":{"line":30,"column":13}},"14":{"start":{"line":24,"column":16},"end":{"line":24,"column":30}},"15":{"start":{"line":26,"column":16},"end":{"line":29,"column":38}},"16":{"start":{"line":27,"column":20},"end":{"line":27,"column":86}},"17":{"start":{"line":29,"column":20},"end":{"line":29,"column":38}},"18":{"start":{"line":34,"column":0},"end":{"line":52,"column":2}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":98}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":85}},"21":{"start":{"line":37,"column":19},"end":{"line":37,"column":41}},"22":{"start":{"line":38,"column":4},"end":{"line":51,"column":5}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":37}},"24":{"start":{"line":41,"column":25},"end":{"line":44,"column":10}},"25":{"start":{"line":45,"column":8},"end":{"line":50,"column":11}},"26":{"start":{"line":46,"column":12},"end":{"line":49,"column":34}},"27":{"start":{"line":47,"column":16},"end":{"line":47,"column":30}},"28":{"start":{"line":49,"column":16},"end":{"line":49,"column":34}},"29":{"start":{"line":53,"column":0},"end":{"line":85,"column":2}},"30":{"start":{"line":54,"column":4},"end":{"line":54,"column":96}},"31":{"start":{"line":55,"column":19},"end":{"line":55,"column":41}},"32":{"start":{"line":56,"column":22},"end":{"line":56,"column":83}},"33":{"start":{"line":57,"column":4},"end":{"line":84,"column":5}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":37}},"35":{"start":{"line":59,"column":9},"end":{"line":84,"column":5}},"36":{"start":{"line":60,"column":31},"end":{"line":60,"column":33}},"37":{"start":{"line":62,"column":8},"end":{"line":63,"column":52}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":52}},"39":{"start":{"line":64,"column":8},"end":{"line":65,"column":50}},"40":{"start":{"line":65,"column":12},"end":{"line":65,"column":50}},"41":{"start":{"line":66,"column":8},"end":{"line":71,"column":23}},"42":{"start":{"line":74,"column":25},"end":{"line":77,"column":9}},"43":{"start":{"line":78,"column":8},"end":{"line":83,"column":11}},"44":{"start":{"line":79,"column":12},"end":{"line":82,"column":39}},"45":{"start":{"line":80,"column":16},"end":{"line":80,"column":30}},"46":{"start":{"line":82,"column":16},"end":{"line":82,"column":39}},"47":{"start":{"line":86,"column":0},"end":{"line":101,"column":2}},"48":{"start":{"line":87,"column":4},"end":{"line":87,"column":96}},"49":{"start":{"line":88,"column":19},"end":{"line":88,"column":41}},"50":{"start":{"line":89,"column":4},"end":{"line":100,"column":5}},"51":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}},"52":{"start":{"line":92,"column":8},"end":{"line":99,"column":11}},"53":{"start":{"line":93,"column":12},"end":{"line":94,"column":30}},"54":{"start":{"line":94,"column":16},"end":{"line":94,"column":30}},"55":{"start":{"line":95,"column":12},"end":{"line":98,"column":39}},"56":{"start":{"line":96,"column":16},"end":{"line":96,"column":82}},"57":{"start":{"line":98,"column":16},"end":{"line":98,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":19},"end":{"line":8,"column":20}},"loc":{"start":{"line":8,"column":33},"end":{"line":15,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":32},"end":{"line":9,"column":33}},"loc":{"start":{"line":9,"column":50},"end":{"line":14,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":22},"end":{"line":16,"column":23}},"loc":{"start":{"line":16,"column":36},"end":{"line":33,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":59},"end":{"line":22,"column":60}},"loc":{"start":{"line":22,"column":77},"end":{"line":31,"column":9}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":23},"end":{"line":34,"column":24}},"loc":{"start":{"line":34,"column":37},"end":{"line":52,"column":1}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":22},"end":{"line":45,"column":23}},"loc":{"start":{"line":45,"column":53},"end":{"line":50,"column":9}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":22},"end":{"line":53,"column":23}},"loc":{"start":{"line":53,"column":36},"end":{"line":85,"column":1}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":70},"end":{"line":78,"column":71}},"loc":{"start":{"line":78,"column":88},"end":{"line":83,"column":9}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":25},"end":{"line":86,"column":26}},"loc":{"start":{"line":86,"column":39},"end":{"line":101,"column":1}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":92,"column":68},"end":{"line":92,"column":69}},"loc":{"start":{"line":92,"column":86},"end":{"line":99,"column":9}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":30}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":30}},{"start":{"line":10,"column":8},"end":{"line":13,"column":30}}],"line":10},"1":{"loc":{"start":{"line":19,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":32,"column":5}},{"start":{"line":19,"column":4},"end":{"line":32,"column":5}}],"line":19},"2":{"loc":{"start":{"line":23,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":30,"column":13}},{"start":{"line":23,"column":12},"end":{"line":30,"column":13}}],"line":23},"3":{"loc":{"start":{"line":26,"column":16},"end":{"line":29,"column":38}},"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":29,"column":38}},{"start":{"line":26,"column":16},"end":{"line":29,"column":38}}],"line":26},"4":{"loc":{"start":{"line":38,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":51,"column":5}},{"start":{"line":38,"column":4},"end":{"line":51,"column":5}}],"line":38},"5":{"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":72}},"type":"cond-expr","locations":[{"start":{"line":43,"column":46},"end":{"line":43,"column":64}},{"start":{"line":43,"column":67},"end":{"line":43,"column":72}}],"line":43},"6":{"loc":{"start":{"line":46,"column":12},"end":{"line":49,"column":34}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":49,"column":34}},{"start":{"line":46,"column":12},"end":{"line":49,"column":34}}],"line":46},"7":{"loc":{"start":{"line":56,"column":22},"end":{"line":56,"column":83}},"type":"cond-expr","locations":[{"start":{"line":56,"column":71},"end":{"line":56,"column":76}},{"start":{"line":56,"column":79},"end":{"line":56,"column":83}}],"line":56},"8":{"loc":{"start":{"line":56,"column":23},"end":{"line":56,"column":67}},"type":"binary-expr","locations":[{"start":{"line":56,"column":23},"end":{"line":56,"column":44}},{"start":{"line":56,"column":48},"end":{"line":56,"column":67}}],"line":56},"9":{"loc":{"start":{"line":57,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":84,"column":5}},{"start":{"line":57,"column":4},"end":{"line":84,"column":5}}],"line":57},"10":{"loc":{"start":{"line":59,"column":9},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":9},"end":{"line":84,"column":5}},{"start":{"line":59,"column":9},"end":{"line":84,"column":5}}],"line":59},"11":{"loc":{"start":{"line":62,"column":8},"end":{"line":63,"column":52}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":63,"column":52}},{"start":{"line":62,"column":8},"end":{"line":63,"column":52}}],"line":62},"12":{"loc":{"start":{"line":64,"column":8},"end":{"line":65,"column":50}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":65,"column":50}},{"start":{"line":64,"column":8},"end":{"line":65,"column":50}}],"line":64},"13":{"loc":{"start":{"line":75,"column":25},"end":{"line":75,"column":82}},"type":"cond-expr","locations":[{"start":{"line":75,"column":50},"end":{"line":75,"column":70}},{"start":{"line":75,"column":73},"end":{"line":75,"column":82}}],"line":75},"14":{"loc":{"start":{"line":76,"column":23},"end":{"line":76,"column":76}},"type":"cond-expr","locations":[{"start":{"line":76,"column":46},"end":{"line":76,"column":64}},{"start":{"line":76,"column":67},"end":{"line":76,"column":76}}],"line":76},"15":{"loc":{"start":{"line":79,"column":12},"end":{"line":82,"column":39}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":82,"column":39}},{"start":{"line":79,"column":12},"end":{"line":82,"column":39}}],"line":79},"16":{"loc":{"start":{"line":89,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":100,"column":5}},{"start":{"line":89,"column":4},"end":{"line":100,"column":5}}],"line":89},"17":{"loc":{"start":{"line":93,"column":12},"end":{"line":94,"column":30}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":94,"column":30}},{"start":{"line":93,"column":12},"end":{"line":94,"column":30}}],"line":93},"18":{"loc":{"start":{"line":95,"column":12},"end":{"line":98,"column":39}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":98,"column":39}},{"start":{"line":95,"column":12},"end":{"line":98,"column":39}}],"line":95}},"s":{"0":5,"1":5,"2":5,"3":0,"4":0,"5":0,"6":0,"7":5,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":5,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":5,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":5,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"todo.js","sourceRoot":"","sources":["todo.ts"],"names":[],"mappings":";;AACA,uDAA0E;AAG1E;;;GAGG;AACQ,QAAA,QAAQ,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAClD,kBAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAQ,EAAE,OAAmB,EAAE,EAAE;QAChD,EAAE,CAAC,CAAC,GAAG,CAAC;YAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI;YAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAES,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACrD,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,wDAAwD,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5F,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,EAAE,CAAC,CAAC,MAAM,CAAC;QACP,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC;QACF,kBAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAQ,EAAE,OAAiB,EAAE,EAAE;YACrE,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC;gBACF,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;oBACT,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtE,IAAI;oBACA,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAC;AAES,QAAA,YAAY,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,sDAAsD,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9F,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,uCAAuC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEjF,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,EAAE,CAAC,CAAC,MAAM,CAAC;QACP,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC;QACF,MAAM,QAAQ,GAAG,IAAI,kBAAQ,CAAC;YAC1B,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;YACjC,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,OAAiB,EAAE,WAAmB,EAAE,EAAE;YAC/D,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI;gBAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAC;AAES,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACrD,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,wDAAwD,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5F,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,MAAM,SAAS,GAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAEzF,EAAE,CAAC,CAAC,MAAM,CAAC;QACP,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAClB,IAAI,gBAAgB,GAAW,EAAE,CAAC;QAClC,8DAA8D;QAC9D,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YAAC,gBAAgB,IAAI,mBAAmB,CAAC;QACnE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YAAC,gBAAgB,IAAI,iBAAiB,CAAC;QAE/D,GAAG,CAAC,IAAI,CAAC;YACL,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,gBAAgB;YACzB,KAAK,EAAE,6DAA6D;YACpE,OAAO,EAAE,GAAG,CAAC,IAAI;SACpB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,IAAI,CAAC,CAAC;QACF,MAAM,QAAQ,GAAW;YACrB,WAAW,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;YACtE,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;SACnE,CAAC;QACF,kBAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAQ,EAAE,OAAiB,EAAE,EAAE;YAChF,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI;gBAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAC;AAES,QAAA,cAAc,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACxD,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,wDAAwD,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5F,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAGtC,EAAE,CAAC,CAAC,MAAM,CAAC;QACP,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC;QACF,kBAAQ,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAQ,EAAE,OAAiB,EAAE,EAAE;YAC9E,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBACT,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI;gBACA,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\nimport { default as TodoItem, TodoModel } from \"../models/mongo/TodoItem\";\nimport { Document } from \"mongoose\";\n\n/**\n * GET /todos\n * todos api endpoint\n */\nexport let getTodos = (req: Request, res: Response) => {\n    TodoItem.find({}, (err: any, product: Document[]) => {\n        if (err) res.send(err);\n        else res.send(product);\n    });\n};\n\nexport let getTodoItem = (req: Request, res: Response) => {\n    req.checkParams(\"id\", \"must include a valid mongo id in the request parameter\").isMongoId();\n    const errors = req.validationErrors();\n\n    if (errors)\n        res.send(errors).status(400);\n    else {\n        TodoItem.findOne({ _id: req.params.id }, (err: any, product: Document) => {\n            if (err) res.send(err);\n            else {\n                if (!product)\n                    res.send(`todo item with ${req.params.id} not found`).status(404);\n                else\n                    res.send(product);\n            }\n        });\n    }\n};\n\nexport let postTodoItem = (req: Request, res: Response) => {\n    req.checkBody(\"description\", \"must include a field in the body named 'description'\").exists();\n    req.checkBody(\"description\", \"field 'description' must not be empty\").notEmpty();\n\n    const errors = req.validationErrors();\n\n    if (errors)\n        res.send(errors).status(400);\n    else {\n        const todoItem = new TodoItem({\n            description: req.body.description,\n            completed: (req.body.completed) ? req.body.completed : false\n        });\n        todoItem.save((err: any, product: Document, numAffected: number) => {\n            if (err) res.send(err);\n            else res.send(product);\n        });\n    }\n};\n\nexport let putTodoItem = (req: Request, res: Response) => {\n    req.checkParams(\"id\", \"must include a valid mongo id in the request parameter\").isMongoId();\n    const errors = req.validationErrors();\n\n    const bodyValid: boolean = (!req.body.description && !req.body.completed) ? false : true;\n\n    if (errors)\n        res.send(errors).status(400);\n    else if (!bodyValid) {\n        let paramErrorString: string = \"\";\n        // TODO: come back to this - its like a coding interview thing\n        if (!req.body.description) paramErrorString += \"body.description \";\n        if (!req.body.completed) paramErrorString += \"body.completed \";\n\n        res.send({\n            \"location\": \"body\",\n            \"param\": paramErrorString,\n            \"msg\": \"must include a description or completed in the request body\",\n            \"value\": req.body\n        }).status(400);\n    }\n    else {\n        const todoItem: object = {\n            description: (req.body.description) ? req.body.description : undefined,\n            completed: (req.body.completed) ? req.body.completed : undefined\n        };\n        TodoItem.findByIdAndUpdate(req.params.id, todoItem, (err: any, product: Document) => {\n            if (err) res.send(err);\n            else res.send().status(200);\n        });\n    }\n};\n\nexport let deleteTodoItem = (req: Request, res: Response) => {\n    req.checkParams(\"id\", \"must include a valid mongo id in the request parameter\").isMongoId();\n    const errors = req.validationErrors();\n\n\n    if (errors)\n        res.send(errors).status(400);\n    else {\n        TodoItem.findOneAndRemove({ _id: req.params.id }, (err: any, product: Document) => {\n            if (err) res.send(err);\n            if (!product)\n                res.send(`todo item with ${req.params.id} not found`).status(404);\n            else\n                res.send().status(204);\n        });\n    }\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"68d6b380255f15beccc9868fbda732b3f2e56551"}
,"/Users/alexbatis/Desktop/node-express-ts/src/controllers/user.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/controllers/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":46}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":44}},"7":{"start":{"line":13,"column":0},"end":{"line":20,"column":2}},"8":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"10":{"start":{"line":17,"column":4},"end":{"line":19,"column":7}},"11":{"start":{"line":25,"column":0},"end":{"line":50,"column":2}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":66}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":71}},"15":{"start":{"line":29,"column":19},"end":{"line":29,"column":41}},"16":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":36}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":38}},"19":{"start":{"line":34,"column":4},"end":{"line":49,"column":23}},"20":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":29}},"22":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":46}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":42}},"25":{"start":{"line":42,"column":8},"end":{"line":48,"column":11}},"26":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"27":{"start":{"line":44,"column":16},"end":{"line":44,"column":33}},"28":{"start":{"line":46,"column":12},"end":{"line":46,"column":73}},"29":{"start":{"line":47,"column":12},"end":{"line":47,"column":54}},"30":{"start":{"line":55,"column":0},"end":{"line":58,"column":2}},"31":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"32":{"start":{"line":57,"column":4},"end":{"line":57,"column":22}},"33":{"start":{"line":63,"column":0},"end":{"line":70,"column":2}},"34":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":33}},"36":{"start":{"line":67,"column":4},"end":{"line":69,"column":7}},"37":{"start":{"line":75,"column":0},"end":{"line":109,"column":2}},"38":{"start":{"line":76,"column":4},"end":{"line":76,"column":56}},"39":{"start":{"line":77,"column":4},"end":{"line":77,"column":90}},"40":{"start":{"line":78,"column":4},"end":{"line":78,"column":86}},"41":{"start":{"line":79,"column":4},"end":{"line":79,"column":71}},"42":{"start":{"line":80,"column":19},"end":{"line":80,"column":41}},"43":{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},"44":{"start":{"line":82,"column":8},"end":{"line":82,"column":36}},"45":{"start":{"line":83,"column":8},"end":{"line":83,"column":39}},"46":{"start":{"line":85,"column":17},"end":{"line":88,"column":6}},"47":{"start":{"line":89,"column":4},"end":{"line":108,"column":7}},"48":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"49":{"start":{"line":91,"column":12},"end":{"line":91,"column":29}},"50":{"start":{"line":93,"column":8},"end":{"line":96,"column":9}},"51":{"start":{"line":94,"column":12},"end":{"line":94,"column":92}},"52":{"start":{"line":95,"column":12},"end":{"line":95,"column":43}},"53":{"start":{"line":97,"column":8},"end":{"line":107,"column":11}},"54":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"55":{"start":{"line":99,"column":16},"end":{"line":99,"column":33}},"56":{"start":{"line":101,"column":12},"end":{"line":106,"column":15}},"57":{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},"58":{"start":{"line":103,"column":20},"end":{"line":103,"column":37}},"59":{"start":{"line":105,"column":16},"end":{"line":105,"column":34}},"60":{"start":{"line":114,"column":0},"end":{"line":118,"column":2}},"61":{"start":{"line":115,"column":4},"end":{"line":117,"column":7}},"62":{"start":{"line":123,"column":0},"end":{"line":152,"column":2}},"63":{"start":{"line":124,"column":4},"end":{"line":124,"column":73}},"64":{"start":{"line":125,"column":4},"end":{"line":125,"column":71}},"65":{"start":{"line":126,"column":19},"end":{"line":126,"column":41}},"66":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"67":{"start":{"line":128,"column":8},"end":{"line":128,"column":36}},"68":{"start":{"line":129,"column":8},"end":{"line":129,"column":40}},"69":{"start":{"line":131,"column":4},"end":{"line":151,"column":7}},"70":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"71":{"start":{"line":133,"column":12},"end":{"line":133,"column":29}},"72":{"start":{"line":135,"column":8},"end":{"line":135,"column":42}},"73":{"start":{"line":136,"column":8},"end":{"line":136,"column":48}},"74":{"start":{"line":137,"column":8},"end":{"line":137,"column":52}},"75":{"start":{"line":138,"column":8},"end":{"line":138,"column":56}},"76":{"start":{"line":139,"column":8},"end":{"line":139,"column":54}},"77":{"start":{"line":140,"column":8},"end":{"line":150,"column":11}},"78":{"start":{"line":141,"column":12},"end":{"line":147,"column":13}},"79":{"start":{"line":142,"column":16},"end":{"line":145,"column":17}},"80":{"start":{"line":143,"column":20},"end":{"line":143,"column":126}},"81":{"start":{"line":144,"column":20},"end":{"line":144,"column":52}},"82":{"start":{"line":146,"column":16},"end":{"line":146,"column":33}},"83":{"start":{"line":148,"column":12},"end":{"line":148,"column":83}},"84":{"start":{"line":149,"column":12},"end":{"line":149,"column":37}},"85":{"start":{"line":157,"column":0},"end":{"line":178,"column":2}},"86":{"start":{"line":158,"column":4},"end":{"line":158,"column":90}},"87":{"start":{"line":159,"column":4},"end":{"line":159,"column":86}},"88":{"start":{"line":160,"column":19},"end":{"line":160,"column":41}},"89":{"start":{"line":161,"column":4},"end":{"line":164,"column":5}},"90":{"start":{"line":162,"column":8},"end":{"line":162,"column":36}},"91":{"start":{"line":163,"column":8},"end":{"line":163,"column":40}},"92":{"start":{"line":165,"column":4},"end":{"line":177,"column":7}},"93":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"94":{"start":{"line":167,"column":12},"end":{"line":167,"column":29}},"95":{"start":{"line":169,"column":8},"end":{"line":169,"column":42}},"96":{"start":{"line":170,"column":8},"end":{"line":176,"column":11}},"97":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"98":{"start":{"line":172,"column":16},"end":{"line":172,"column":33}},"99":{"start":{"line":174,"column":12},"end":{"line":174,"column":72}},"100":{"start":{"line":175,"column":12},"end":{"line":175,"column":37}},"101":{"start":{"line":183,"column":0},"end":{"line":192,"column":2}},"102":{"start":{"line":184,"column":4},"end":{"line":191,"column":7}},"103":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"104":{"start":{"line":186,"column":12},"end":{"line":186,"column":29}},"105":{"start":{"line":188,"column":8},"end":{"line":188,"column":21}},"106":{"start":{"line":189,"column":8},"end":{"line":189,"column":69}},"107":{"start":{"line":190,"column":8},"end":{"line":190,"column":26}},"108":{"start":{"line":197,"column":0},"end":{"line":213,"column":2}},"109":{"start":{"line":198,"column":21},"end":{"line":198,"column":40}},"110":{"start":{"line":199,"column":4},"end":{"line":212,"column":7}},"111":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"112":{"start":{"line":201,"column":12},"end":{"line":201,"column":29}},"113":{"start":{"line":203,"column":8},"end":{"line":203,"column":35}},"114":{"start":{"line":204,"column":8},"end":{"line":204,"column":77}},"115":{"start":{"line":204,"column":52},"end":{"line":204,"column":75}},"116":{"start":{"line":205,"column":8},"end":{"line":211,"column":11}},"117":{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},"118":{"start":{"line":207,"column":16},"end":{"line":207,"column":33}},"119":{"start":{"line":209,"column":12},"end":{"line":209,"column":81}},"120":{"start":{"line":210,"column":12},"end":{"line":210,"column":37}},"121":{"start":{"line":218,"column":0},"end":{"line":237,"column":2}},"122":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"123":{"start":{"line":220,"column":8},"end":{"line":220,"column":33}},"124":{"start":{"line":222,"column":4},"end":{"line":236,"column":7}},"125":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"126":{"start":{"line":227,"column":12},"end":{"line":227,"column":29}},"127":{"start":{"line":229,"column":8},"end":{"line":232,"column":9}},"128":{"start":{"line":230,"column":12},"end":{"line":230,"column":92}},"129":{"start":{"line":231,"column":12},"end":{"line":231,"column":43}},"130":{"start":{"line":233,"column":8},"end":{"line":235,"column":11}},"131":{"start":{"line":242,"column":0},"end":{"line":301,"column":2}},"132":{"start":{"line":243,"column":4},"end":{"line":243,"column":91}},"133":{"start":{"line":244,"column":4},"end":{"line":244,"column":77}},"134":{"start":{"line":245,"column":19},"end":{"line":245,"column":41}},"135":{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},"136":{"start":{"line":247,"column":8},"end":{"line":247,"column":36}},"137":{"start":{"line":248,"column":8},"end":{"line":248,"column":36}},"138":{"start":{"line":250,"column":4},"end":{"line":300,"column":7}},"139":{"start":{"line":252,"column":12},"end":{"line":274,"column":15}},"140":{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},"141":{"start":{"line":257,"column":20},"end":{"line":257,"column":37}},"142":{"start":{"line":259,"column":16},"end":{"line":262,"column":17}},"143":{"start":{"line":260,"column":20},"end":{"line":260,"column":100}},"144":{"start":{"line":261,"column":20},"end":{"line":261,"column":48}},"145":{"start":{"line":263,"column":16},"end":{"line":263,"column":50}},"146":{"start":{"line":264,"column":16},"end":{"line":264,"column":52}},"147":{"start":{"line":265,"column":16},"end":{"line":265,"column":54}},"148":{"start":{"line":266,"column":16},"end":{"line":273,"column":19}},"149":{"start":{"line":267,"column":20},"end":{"line":269,"column":21}},"150":{"start":{"line":268,"column":24},"end":{"line":268,"column":41}},"151":{"start":{"line":270,"column":20},"end":{"line":272,"column":23}},"152":{"start":{"line":271,"column":24},"end":{"line":271,"column":40}},"153":{"start":{"line":277,"column":32},"end":{"line":283,"column":14}},"154":{"start":{"line":284,"column":32},"end":{"line":289,"column":13}},"155":{"start":{"line":290,"column":12},"end":{"line":293,"column":15}},"156":{"start":{"line":291,"column":16},"end":{"line":291,"column":90}},"157":{"start":{"line":292,"column":16},"end":{"line":292,"column":26}},"158":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"159":{"start":{"line":297,"column":12},"end":{"line":297,"column":29}},"160":{"start":{"line":299,"column":8},"end":{"line":299,"column":26}},"161":{"start":{"line":306,"column":0},"end":{"line":313,"column":2}},"162":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"163":{"start":{"line":308,"column":8},"end":{"line":308,"column":33}},"164":{"start":{"line":310,"column":4},"end":{"line":312,"column":7}},"165":{"start":{"line":318,"column":0},"end":{"line":377,"column":2}},"166":{"start":{"line":319,"column":4},"end":{"line":319,"column":73}},"167":{"start":{"line":320,"column":4},"end":{"line":320,"column":71}},"168":{"start":{"line":321,"column":19},"end":{"line":321,"column":41}},"169":{"start":{"line":322,"column":4},"end":{"line":325,"column":5}},"170":{"start":{"line":323,"column":8},"end":{"line":323,"column":36}},"171":{"start":{"line":324,"column":8},"end":{"line":324,"column":39}},"172":{"start":{"line":326,"column":4},"end":{"line":376,"column":7}},"173":{"start":{"line":328,"column":12},"end":{"line":331,"column":15}},"174":{"start":{"line":329,"column":30},"end":{"line":329,"column":49}},"175":{"start":{"line":330,"column":16},"end":{"line":330,"column":33}},"176":{"start":{"line":334,"column":12},"end":{"line":347,"column":15}},"177":{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},"178":{"start":{"line":336,"column":20},"end":{"line":336,"column":37}},"179":{"start":{"line":338,"column":16},"end":{"line":341,"column":17}},"180":{"start":{"line":339,"column":20},"end":{"line":339,"column":100}},"181":{"start":{"line":340,"column":20},"end":{"line":340,"column":51}},"182":{"start":{"line":342,"column":16},"end":{"line":342,"column":48}},"183":{"start":{"line":343,"column":16},"end":{"line":343,"column":65}},"184":{"start":{"line":344,"column":16},"end":{"line":346,"column":19}},"185":{"start":{"line":345,"column":20},"end":{"line":345,"column":43}},"186":{"start":{"line":350,"column":32},"end":{"line":356,"column":14}},"187":{"start":{"line":357,"column":32},"end":{"line":365,"column":13}},"188":{"start":{"line":366,"column":12},"end":{"line":369,"column":15}},"189":{"start":{"line":367,"column":16},"end":{"line":367,"column":114}},"190":{"start":{"line":368,"column":16},"end":{"line":368,"column":26}},"191":{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},"192":{"start":{"line":373,"column":12},"end":{"line":373,"column":29}},"193":{"start":{"line":375,"column":8},"end":{"line":375,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":19},"end":{"line":13,"column":20}},"loc":{"start":{"line":13,"column":33},"end":{"line":20,"column":1}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":21}},"loc":{"start":{"line":25,"column":40},"end":{"line":50,"column":1}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":35},"end":{"line":34,"column":36}},"loc":{"start":{"line":34,"column":56},"end":{"line":49,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":24},"end":{"line":42,"column":25}},"loc":{"start":{"line":42,"column":33},"end":{"line":48,"column":9}},"line":42},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":17},"end":{"line":55,"column":18}},"loc":{"start":{"line":55,"column":31},"end":{"line":58,"column":1}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":63,"column":20},"end":{"line":63,"column":21}},"loc":{"start":{"line":63,"column":34},"end":{"line":70,"column":1}},"line":63},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":21},"end":{"line":75,"column":22}},"loc":{"start":{"line":75,"column":41},"end":{"line":109,"column":1}},"line":75},"7":{"name":"(anonymous_7)","decl":{"start":{"line":89,"column":54},"end":{"line":89,"column":55}},"loc":{"start":{"line":89,"column":77},"end":{"line":108,"column":5}},"line":89},"8":{"name":"(anonymous_8)","decl":{"start":{"line":97,"column":18},"end":{"line":97,"column":19}},"loc":{"start":{"line":97,"column":27},"end":{"line":107,"column":9}},"line":97},"9":{"name":"(anonymous_9)","decl":{"start":{"line":101,"column":28},"end":{"line":101,"column":29}},"loc":{"start":{"line":101,"column":37},"end":{"line":106,"column":13}},"line":101},"10":{"name":"(anonymous_10)","decl":{"start":{"line":114,"column":21},"end":{"line":114,"column":22}},"loc":{"start":{"line":114,"column":35},"end":{"line":118,"column":1}},"line":114},"11":{"name":"(anonymous_11)","decl":{"start":{"line":123,"column":28},"end":{"line":123,"column":29}},"loc":{"start":{"line":123,"column":48},"end":{"line":152,"column":1}},"line":123},"12":{"name":"(anonymous_12)","decl":{"start":{"line":131,"column":41},"end":{"line":131,"column":42}},"loc":{"start":{"line":131,"column":56},"end":{"line":151,"column":5}},"line":131},"13":{"name":"(anonymous_13)","decl":{"start":{"line":140,"column":18},"end":{"line":140,"column":19}},"loc":{"start":{"line":140,"column":27},"end":{"line":150,"column":9}},"line":140},"14":{"name":"(anonymous_14)","decl":{"start":{"line":157,"column":29},"end":{"line":157,"column":30}},"loc":{"start":{"line":157,"column":49},"end":{"line":178,"column":1}},"line":157},"15":{"name":"(anonymous_15)","decl":{"start":{"line":165,"column":41},"end":{"line":165,"column":42}},"loc":{"start":{"line":165,"column":56},"end":{"line":177,"column":5}},"line":165},"16":{"name":"(anonymous_16)","decl":{"start":{"line":170,"column":18},"end":{"line":170,"column":19}},"loc":{"start":{"line":170,"column":27},"end":{"line":176,"column":9}},"line":170},"17":{"name":"(anonymous_17)","decl":{"start":{"line":183,"column":28},"end":{"line":183,"column":29}},"loc":{"start":{"line":183,"column":48},"end":{"line":192,"column":1}},"line":183},"18":{"name":"(anonymous_18)","decl":{"start":{"line":184,"column":48},"end":{"line":184,"column":49}},"loc":{"start":{"line":184,"column":57},"end":{"line":191,"column":5}},"line":184},"19":{"name":"(anonymous_19)","decl":{"start":{"line":197,"column":25},"end":{"line":197,"column":26}},"loc":{"start":{"line":197,"column":45},"end":{"line":213,"column":1}},"line":197},"20":{"name":"(anonymous_20)","decl":{"start":{"line":199,"column":41},"end":{"line":199,"column":42}},"loc":{"start":{"line":199,"column":56},"end":{"line":212,"column":5}},"line":199},"21":{"name":"(anonymous_21)","decl":{"start":{"line":204,"column":41},"end":{"line":204,"column":42}},"loc":{"start":{"line":204,"column":52},"end":{"line":204,"column":75}},"line":204},"22":{"name":"(anonymous_22)","decl":{"start":{"line":205,"column":18},"end":{"line":205,"column":19}},"loc":{"start":{"line":205,"column":27},"end":{"line":211,"column":9}},"line":205},"23":{"name":"(anonymous_23)","decl":{"start":{"line":218,"column":19},"end":{"line":218,"column":20}},"loc":{"start":{"line":218,"column":39},"end":{"line":237,"column":1}},"line":218},"24":{"name":"(anonymous_24)","decl":{"start":{"line":225,"column":14},"end":{"line":225,"column":15}},"loc":{"start":{"line":225,"column":29},"end":{"line":236,"column":5}},"line":225},"25":{"name":"(anonymous_25)","decl":{"start":{"line":242,"column":20},"end":{"line":242,"column":21}},"loc":{"start":{"line":242,"column":40},"end":{"line":301,"column":1}},"line":242},"26":{"name":"resetPassword","decl":{"start":{"line":251,"column":17},"end":{"line":251,"column":30}},"loc":{"start":{"line":251,"column":37},"end":{"line":275,"column":9}},"line":251},"27":{"name":"(anonymous_27)","decl":{"start":{"line":255,"column":22},"end":{"line":255,"column":23}},"loc":{"start":{"line":255,"column":37},"end":{"line":274,"column":13}},"line":255},"28":{"name":"(anonymous_28)","decl":{"start":{"line":266,"column":26},"end":{"line":266,"column":27}},"loc":{"start":{"line":266,"column":35},"end":{"line":273,"column":17}},"line":266},"29":{"name":"(anonymous_29)","decl":{"start":{"line":270,"column":36},"end":{"line":270,"column":37}},"loc":{"start":{"line":270,"column":45},"end":{"line":272,"column":21}},"line":270},"30":{"name":"sendResetPasswordEmail","decl":{"start":{"line":276,"column":17},"end":{"line":276,"column":39}},"loc":{"start":{"line":276,"column":52},"end":{"line":294,"column":9}},"line":276},"31":{"name":"(anonymous_31)","decl":{"start":{"line":290,"column":46},"end":{"line":290,"column":47}},"loc":{"start":{"line":290,"column":55},"end":{"line":293,"column":13}},"line":290},"32":{"name":"(anonymous_32)","decl":{"start":{"line":295,"column":7},"end":{"line":295,"column":8}},"loc":{"start":{"line":295,"column":16},"end":{"line":300,"column":5}},"line":295},"33":{"name":"(anonymous_33)","decl":{"start":{"line":306,"column":20},"end":{"line":306,"column":21}},"loc":{"start":{"line":306,"column":34},"end":{"line":313,"column":1}},"line":306},"34":{"name":"(anonymous_34)","decl":{"start":{"line":318,"column":21},"end":{"line":318,"column":22}},"loc":{"start":{"line":318,"column":41},"end":{"line":377,"column":1}},"line":318},"35":{"name":"createRandomToken","decl":{"start":{"line":327,"column":17},"end":{"line":327,"column":34}},"loc":{"start":{"line":327,"column":41},"end":{"line":332,"column":9}},"line":327},"36":{"name":"(anonymous_36)","decl":{"start":{"line":328,"column":35},"end":{"line":328,"column":36}},"loc":{"start":{"line":328,"column":49},"end":{"line":331,"column":13}},"line":328},"37":{"name":"setRandomToken","decl":{"start":{"line":333,"column":17},"end":{"line":333,"column":31}},"loc":{"start":{"line":333,"column":45},"end":{"line":348,"column":9}},"line":333},"38":{"name":"(anonymous_38)","decl":{"start":{"line":334,"column":62},"end":{"line":334,"column":63}},"loc":{"start":{"line":334,"column":77},"end":{"line":347,"column":13}},"line":334},"39":{"name":"(anonymous_39)","decl":{"start":{"line":344,"column":26},"end":{"line":344,"column":27}},"loc":{"start":{"line":344,"column":35},"end":{"line":346,"column":17}},"line":344},"40":{"name":"sendForgotPasswordEmail","decl":{"start":{"line":349,"column":17},"end":{"line":349,"column":40}},"loc":{"start":{"line":349,"column":60},"end":{"line":370,"column":9}},"line":349},"41":{"name":"(anonymous_41)","decl":{"start":{"line":366,"column":46},"end":{"line":366,"column":47}},"loc":{"start":{"line":366,"column":55},"end":{"line":369,"column":13}},"line":366},"42":{"name":"(anonymous_42)","decl":{"start":{"line":371,"column":7},"end":{"line":371,"column":8}},"loc":{"start":{"line":371,"column":16},"end":{"line":376,"column":5}},"line":371}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"1":{"loc":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},{"start":{"line":30,"column":4},"end":{"line":33,"column":5}}],"line":30},"2":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"3":{"loc":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},{"start":{"line":38,"column":8},"end":{"line":41,"column":9}}],"line":38},"4":{"loc":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},{"start":{"line":43,"column":12},"end":{"line":45,"column":13}}],"line":43},"5":{"loc":{"start":{"line":47,"column":25},"end":{"line":47,"column":52}},"type":"binary-expr","locations":[{"start":{"line":47,"column":25},"end":{"line":47,"column":45}},{"start":{"line":47,"column":49},"end":{"line":47,"column":52}}],"line":47},"6":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},{"start":{"line":64,"column":4},"end":{"line":66,"column":5}}],"line":64},"7":{"loc":{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},{"start":{"line":81,"column":4},"end":{"line":84,"column":5}}],"line":81},"8":{"loc":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},{"start":{"line":90,"column":8},"end":{"line":92,"column":9}}],"line":90},"9":{"loc":{"start":{"line":93,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":96,"column":9}},{"start":{"line":93,"column":8},"end":{"line":96,"column":9}}],"line":93},"10":{"loc":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},{"start":{"line":98,"column":12},"end":{"line":100,"column":13}}],"line":98},"11":{"loc":{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},{"start":{"line":102,"column":16},"end":{"line":104,"column":17}}],"line":102},"12":{"loc":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},{"start":{"line":127,"column":4},"end":{"line":130,"column":5}}],"line":127},"13":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"14":{"loc":{"start":{"line":135,"column":21},"end":{"line":135,"column":41}},"type":"binary-expr","locations":[{"start":{"line":135,"column":21},"end":{"line":135,"column":35}},{"start":{"line":135,"column":39},"end":{"line":135,"column":41}}],"line":135},"15":{"loc":{"start":{"line":136,"column":28},"end":{"line":136,"column":47}},"type":"binary-expr","locations":[{"start":{"line":136,"column":28},"end":{"line":136,"column":41}},{"start":{"line":136,"column":45},"end":{"line":136,"column":47}}],"line":136},"16":{"loc":{"start":{"line":137,"column":30},"end":{"line":137,"column":51}},"type":"binary-expr","locations":[{"start":{"line":137,"column":30},"end":{"line":137,"column":45}},{"start":{"line":137,"column":49},"end":{"line":137,"column":51}}],"line":137},"17":{"loc":{"start":{"line":138,"column":32},"end":{"line":138,"column":55}},"type":"binary-expr","locations":[{"start":{"line":138,"column":32},"end":{"line":138,"column":49}},{"start":{"line":138,"column":53},"end":{"line":138,"column":55}}],"line":138},"18":{"loc":{"start":{"line":139,"column":31},"end":{"line":139,"column":53}},"type":"binary-expr","locations":[{"start":{"line":139,"column":31},"end":{"line":139,"column":47}},{"start":{"line":139,"column":51},"end":{"line":139,"column":53}}],"line":139},"19":{"loc":{"start":{"line":141,"column":12},"end":{"line":147,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":147,"column":13}},{"start":{"line":141,"column":12},"end":{"line":147,"column":13}}],"line":141},"20":{"loc":{"start":{"line":142,"column":16},"end":{"line":145,"column":17}},"type":"if","locations":[{"start":{"line":142,"column":16},"end":{"line":145,"column":17}},{"start":{"line":142,"column":16},"end":{"line":145,"column":17}}],"line":142},"21":{"loc":{"start":{"line":161,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":164,"column":5}},{"start":{"line":161,"column":4},"end":{"line":164,"column":5}}],"line":161},"22":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{"line":166,"column":8},"end":{"line":168,"column":9}}],"line":166},"23":{"loc":{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":173,"column":13}},{"start":{"line":171,"column":12},"end":{"line":173,"column":13}}],"line":171},"24":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"25":{"loc":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},{"start":{"line":200,"column":8},"end":{"line":202,"column":9}}],"line":200},"26":{"loc":{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},{"start":{"line":206,"column":12},"end":{"line":208,"column":13}}],"line":206},"27":{"loc":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},{"start":{"line":219,"column":4},"end":{"line":221,"column":5}}],"line":219},"28":{"loc":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},{"start":{"line":226,"column":8},"end":{"line":228,"column":9}}],"line":226},"29":{"loc":{"start":{"line":229,"column":8},"end":{"line":232,"column":9}},"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":232,"column":9}},{"start":{"line":229,"column":8},"end":{"line":232,"column":9}}],"line":229},"30":{"loc":{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},{"start":{"line":246,"column":4},"end":{"line":249,"column":5}}],"line":246},"31":{"loc":{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},"type":"if","locations":[{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},{"start":{"line":256,"column":16},"end":{"line":258,"column":17}}],"line":256},"32":{"loc":{"start":{"line":259,"column":16},"end":{"line":262,"column":17}},"type":"if","locations":[{"start":{"line":259,"column":16},"end":{"line":262,"column":17}},{"start":{"line":259,"column":16},"end":{"line":262,"column":17}}],"line":259},"33":{"loc":{"start":{"line":267,"column":20},"end":{"line":269,"column":21}},"type":"if","locations":[{"start":{"line":267,"column":20},"end":{"line":269,"column":21}},{"start":{"line":267,"column":20},"end":{"line":269,"column":21}}],"line":267},"34":{"loc":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},{"start":{"line":296,"column":8},"end":{"line":298,"column":9}}],"line":296},"35":{"loc":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},{"start":{"line":307,"column":4},"end":{"line":309,"column":5}}],"line":307},"36":{"loc":{"start":{"line":322,"column":4},"end":{"line":325,"column":5}},"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":325,"column":5}},{"start":{"line":322,"column":4},"end":{"line":325,"column":5}}],"line":322},"37":{"loc":{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},"type":"if","locations":[{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},{"start":{"line":335,"column":16},"end":{"line":337,"column":17}}],"line":335},"38":{"loc":{"start":{"line":338,"column":16},"end":{"line":341,"column":17}},"type":"if","locations":[{"start":{"line":338,"column":16},"end":{"line":341,"column":17}},{"start":{"line":338,"column":16},"end":{"line":341,"column":17}}],"line":338},"39":{"loc":{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":374,"column":9}},{"start":{"line":372,"column":8},"end":{"line":374,"column":9}}],"line":372}},"s":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":5,"6":5,"7":5,"8":1,"9":0,"10":1,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":5,"31":0,"32":0,"33":5,"34":1,"35":0,"36":1,"37":5,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":5,"61":0,"62":5,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":5,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":5,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":5,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":5,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":5,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":5,"162":0,"163":0,"164":0,"165":5,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"b":{"0":[0,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"inputSourceMap":{"version":3,"file":"user.js","sourceRoot":"","sources":["user.ts"],"names":[],"mappings":"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","sourcesContent":["import * as async from \"async\";\nimport * as crypto from \"crypto\";\nimport * as nodemailer from \"nodemailer\";\nimport * as passport from \"passport\";\nimport { default as User, UserModel, AuthToken } from \"../models/mongo/User\";\nimport { Request, Response, NextFunction } from \"express\";\nimport { IVerifyOptions } from \"passport-local\";\nimport { WriteError } from \"mongodb\";\nconst request = require(\"express-validator\");\n\n\n/**\n * GET /login\n * Login page.\n */\nexport let getLogin = (req: Request, res: Response) => {\n  if (req.user) {\n    return res.redirect(\"/\");\n  }\n  res.render(\"account/login\", {\n    title: \"Login\"\n  });\n};\n\n/**\n * POST /login\n * Sign in using email and password.\n */\nexport let postLogin = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"password\", \"Password cannot be blank\").notEmpty();\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/login\");\n  }\n\n  passport.authenticate(\"local\", (err: Error, user: UserModel, info: IVerifyOptions) => {\n    if (err) { return next(err); }\n    if (!user) {\n      req.flash(\"errors\", info.message);\n      return res.redirect(\"/login\");\n    }\n    req.logIn(user, (err) => {\n      if (err) { return next(err); }\n      req.flash(\"success\", { msg: \"Success! You are logged in.\" });\n      res.redirect(req.session.returnTo || \"/\");\n    });\n  })(req, res, next);\n};\n\n/**\n * GET /logout\n * Log out.\n */\nexport let logout = (req: Request, res: Response) => {\n  req.logout();\n  res.redirect(\"/\");\n};\n\n/**\n * GET /signup\n * Signup page.\n */\nexport let getSignup = (req: Request, res: Response) => {\n  if (req.user) {\n    return res.redirect(\"/\");\n  }\n  res.render(\"account/signup\", {\n    title: \"Create Account\"\n  });\n};\n\n/**\n * POST /signup\n * Create a new local account.\n */\nexport let postSignup = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"password\", \"Password must be at least 4 characters long\").len({ min: 4 });\n  req.assert(\"confirmPassword\", \"Passwords do not match\").equals(req.body.password);\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/signup\");\n  }\n\n  const user = new User({\n    email: req.body.email,\n    password: req.body.password\n  });\n\n  User.findOne({ email: req.body.email }, (err, existingUser) => {\n    if (err) { return next(err); }\n    if (existingUser) {\n      req.flash(\"errors\", { msg: \"Account with that email address already exists.\" });\n      return res.redirect(\"/signup\");\n    }\n    user.save((err) => {\n      if (err) { return next(err); }\n      req.logIn(user, (err) => {\n        if (err) {\n          return next(err);\n        }\n        res.redirect(\"/\");\n      });\n    });\n  });\n};\n\n/**\n * GET /account\n * Profile page.\n */\nexport let getAccount = (req: Request, res: Response) => {\n  res.render(\"account/profile\", {\n    title: \"Account Management\"\n  });\n};\n\n/**\n * POST /account/profile\n * Update profile information.\n */\nexport let postUpdateProfile = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Please enter a valid email address.\").isEmail();\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/account\");\n  }\n\n  User.findById(req.user.id, (err, user: UserModel) => {\n    if (err) { return next(err); }\n    user.email = req.body.email || \"\";\n    user.profile.name = req.body.name || \"\";\n    user.profile.gender = req.body.gender || \"\";\n    user.profile.location = req.body.location || \"\";\n    user.profile.website = req.body.website || \"\";\n    user.save((err: WriteError) => {\n      if (err) {\n        if (err.code === 11000) {\n          req.flash(\"errors\", { msg: \"The email address you have entered is already associated with an account.\" });\n          return res.redirect(\"/account\");\n        }\n        return next(err);\n      }\n      req.flash(\"success\", { msg: \"Profile information has been updated.\" });\n      res.redirect(\"/account\");\n    });\n  });\n};\n\n/**\n * POST /account/password\n * Update current password.\n */\nexport let postUpdatePassword = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"password\", \"Password must be at least 4 characters long\").len({ min: 4 });\n  req.assert(\"confirmPassword\", \"Passwords do not match\").equals(req.body.password);\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/account\");\n  }\n\n  User.findById(req.user.id, (err, user: UserModel) => {\n    if (err) { return next(err); }\n    user.password = req.body.password;\n    user.save((err: WriteError) => {\n      if (err) { return next(err); }\n      req.flash(\"success\", { msg: \"Password has been changed.\" });\n      res.redirect(\"/account\");\n    });\n  });\n};\n\n/**\n * POST /account/delete\n * Delete user account.\n */\nexport let postDeleteAccount = (req: Request, res: Response, next: NextFunction) => {\n  User.remove({ _id: req.user.id }, (err) => {\n    if (err) { return next(err); }\n    req.logout();\n    req.flash(\"info\", { msg: \"Your account has been deleted.\" });\n    res.redirect(\"/\");\n  });\n};\n\n/**\n * GET /account/unlink/:provider\n * Unlink OAuth provider.\n */\nexport let getOauthUnlink = (req: Request, res: Response, next: NextFunction) => {\n  const provider = req.params.provider;\n  User.findById(req.user.id, (err, user: any) => {\n    if (err) { return next(err); }\n    user[provider] = undefined;\n    user.tokens = user.tokens.filter((token: AuthToken) => token.kind !== provider);\n    user.save((err: WriteError) => {\n      if (err) { return next(err); }\n      req.flash(\"info\", { msg: `${provider} account has been unlinked.` });\n      res.redirect(\"/account\");\n    });\n  });\n};\n\n/**\n * GET /reset/:token\n * Reset Password page.\n */\nexport let getReset = (req: Request, res: Response, next: NextFunction) => {\n  if (req.isAuthenticated()) {\n    return res.redirect(\"/\");\n  }\n  User\n    .findOne({ passwordResetToken: req.params.token })\n    .where(\"passwordResetExpires\").gt(Date.now())\n    .exec((err, user) => {\n      if (err) { return next(err); }\n      if (!user) {\n        req.flash(\"errors\", { msg: \"Password reset token is invalid or has expired.\" });\n        return res.redirect(\"/forgot\");\n      }\n      res.render(\"account/reset\", {\n        title: \"Password Reset\"\n      });\n    });\n};\n\n/**\n * POST /reset/:token\n * Process the reset password request.\n */\nexport let postReset = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"password\", \"Password must be at least 4 characters long.\").len({ min: 4 });\n  req.assert(\"confirm\", \"Passwords must match.\").equals(req.body.password);\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"back\");\n  }\n\n  async.waterfall([\n    function resetPassword(done: Function) {\n      User\n        .findOne({ passwordResetToken: req.params.token })\n        .where(\"passwordResetExpires\").gt(Date.now())\n        .exec((err, user: any) => {\n          if (err) { return next(err); }\n          if (!user) {\n            req.flash(\"errors\", { msg: \"Password reset token is invalid or has expired.\" });\n            return res.redirect(\"back\");\n          }\n          user.password = req.body.password;\n          user.passwordResetToken = undefined;\n          user.passwordResetExpires = undefined;\n          user.save((err: WriteError) => {\n            if (err) { return next(err); }\n            req.logIn(user, (err) => {\n              done(err, user);\n            });\n          });\n        });\n    },\n    function sendResetPasswordEmail(user: UserModel, done: Function) {\n      const transporter = nodemailer.createTransport({\n        service: \"SendGrid\",\n        auth: {\n          user: process.env.SENDGRID_USER,\n          pass: process.env.SENDGRID_PASSWORD\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: \"express-ts@starter.com\",\n        subject: \"Your password has been changed\",\n        text: `Hello,\\n\\nThis is a confirmation that the password for your account ${user.email} has just been changed.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        req.flash(\"success\", { msg: \"Success! Your password has been changed.\" });\n        done(err);\n      });\n    }\n  ], (err) => {\n    if (err) { return next(err); }\n    res.redirect(\"/\");\n  });\n};\n\n/**\n * GET /forgot\n * Forgot Password page.\n */\nexport let getForgot = (req: Request, res: Response) => {\n  if (req.isAuthenticated()) {\n    return res.redirect(\"/\");\n  }\n  res.render(\"account/forgot\", {\n    title: \"Forgot Password\"\n  });\n};\n\n/**\n * POST /forgot\n * Create a random token, then the send user an email with a reset link.\n */\nexport let postForgot = (req: Request, res: Response, next: NextFunction) => {\n  req.assert(\"email\", \"Please enter a valid email address.\").isEmail();\n  req.sanitize(\"email\").normalizeEmail({ gmail_remove_dots: false });\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/forgot\");\n  }\n\n  async.waterfall([\n    function createRandomToken(done: Function) {\n      crypto.randomBytes(16, (err, buf) => {\n        const token = buf.toString(\"hex\");\n        done(err, token);\n      });\n    },\n    function setRandomToken(token: AuthToken, done: Function) {\n      User.findOne({ email: req.body.email }, (err, user: any) => {\n        if (err) { return done(err); }\n        if (!user) {\n          req.flash(\"errors\", { msg: \"Account with that email address does not exist.\" });\n          return res.redirect(\"/forgot\");\n        }\n        user.passwordResetToken = token;\n        user.passwordResetExpires = Date.now() + 3600000; // 1 hour\n        user.save((err: WriteError) => {\n          done(err, token, user);\n        });\n      });\n    },\n    function sendForgotPasswordEmail(token: AuthToken, user: UserModel, done: Function) {\n      const transporter = nodemailer.createTransport({\n        service: \"SendGrid\",\n        auth: {\n          user: process.env.SENDGRID_USER,\n          pass: process.env.SENDGRID_PASSWORD\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: \"hackathon@starter.com\",\n        subject: \"Reset your password on Hackathon Starter\",\n        text: `You are receiving this email because you (or someone else) have requested the reset of the password for your account.\\n\\n\n          Please click on the following link, or paste this into your browser to complete the process:\\n\\n\n          http://${req.headers.host}/reset/${token}\\n\\n\n          If you did not request this, please ignore this email and your password will remain unchanged.\\n`\n      };\n      transporter.sendMail(mailOptions, (err) => {\n        req.flash(\"info\", { msg: `An e-mail has been sent to ${user.email} with further instructions.` });\n        done(err);\n      });\n    }\n  ], (err) => {\n    if (err) { return next(err); }\n    res.redirect(\"/forgot\");\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"592b3f2489d938ada3c4164051d6a8cd4c0fa047"}
,"/Users/alexbatis/Desktop/node-express-ts/src/models/Song.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/models/Song.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":8},"end":{"line":6,"column":48}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":52}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":50}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":22},"end":{"line":11,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":11},"end":{"line":14,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":47}},"type":"binary-expr","locations":[{"start":{"line":6,"column":21},"end":{"line":6,"column":25}},{"start":{"line":6,"column":29},"end":{"line":6,"column":39}},{"start":{"line":6,"column":43},"end":{"line":6,"column":47}}],"line":6},"1":{"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":51}},"type":"binary-expr","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":27}},{"start":{"line":8,"column":31},"end":{"line":8,"column":43}},{"start":{"line":8,"column":47},"end":{"line":8,"column":51}}],"line":8},"2":{"loc":{"start":{"line":10,"column":22},"end":{"line":10,"column":49}},"type":"binary-expr","locations":[{"start":{"line":10,"column":22},"end":{"line":10,"column":26}},{"start":{"line":10,"column":30},"end":{"line":10,"column":41}},{"start":{"line":10,"column":45},"end":{"line":10,"column":49}}],"line":10}},"s":{"0":5,"1":0,"2":0,"3":0,"4":0,"5":5},"f":{"0":0,"1":0},"b":{"0":[0,0,0],"1":[0,0,0],"2":[0,0,0]},"inputSourceMap":{"version":3,"file":"Song.js","sourceRoot":"","sources":["Song.ts"],"names":[],"mappings":";;AAKA;IAKI,YAAY,IAAY;QACpB,2CAA2C;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QACxC,2CAA2C;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;QAC5C,2CAA2C;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;IAC9C,CAAC;IAGM,GAAG,CAAC,CAAS;QAChB,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;CACJ;AAlBD,oBAkBC","sourcesContent":["interface ISong {\n    title?: string;\n    seconds?: number;\n    artist?: string;\n}\nexport class Song {\n    public title: String;\n    public seconds: number;\n    public artist: String;\n\n    constructor(song?: ISong) {\n        // tslint:disable-next-line:no-null-keyword\n        this.title = song && song.title || null;\n        // tslint:disable-next-line:no-null-keyword\n        this.seconds = song && song.seconds || null;\n        // tslint:disable-next-line:no-null-keyword\n        this.artist = song && song.artist || null;\n    }\n\n\n    public idk(y: string) {\n        return y;\n    }\n}"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"b03eb66240098ac3feda475230ba7df825a51e61"}
,"/Users/alexbatis/Desktop/node-express-ts/src/models/mongo/TodoItem.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/models/mongo/TodoItem.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":23},"end":{"line":7,"column":24}},"3":{"start":{"line":42,"column":17},"end":{"line":42,"column":59}},"4":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":5,"1":5,"2":5,"3":5,"4":5},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"TodoItem.js","sourceRoot":"","sources":["TodoItem.ts"],"names":[],"mappings":";;AAEA,qCAAqC;AAOrC,MAAM,cAAc,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACzC,WAAW,EAAE,MAAM;IACnB,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;CAC7C,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB;;GAEG;AACH,+CAA+C;AAC/C,uBAAuB;AACvB,yDAAyD;AACzD,wCAAwC;AACxC,qCAAqC;AACrC,mFAAmF;AACnF,uCAAuC;AACvC,8BAA8B;AAC9B,gBAAgB;AAChB,UAAU;AACV,QAAQ;AACR,MAAM;AAEN,kHAAkH;AAClH,kGAAkG;AAClG,wBAAwB;AACxB,QAAQ;AACR,KAAK;AAGL;;GAEG;AACH,0DAA0D;AAC1D,iBAAiB;AACjB,kBAAkB;AAClB,MAAM;AACN,uBAAuB;AACvB,+DAA+D;AAC/D,MAAM;AACN,2EAA2E;AAC3E,mEAAmE;AACnE,KAAK;AAEL,8EAA8E;AAC9E,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;AAC5D,kBAAe,QAAQ,CAAC","sourcesContent":["import * as bcrypt from \"bcrypt-nodejs\";\nimport * as crypto from \"crypto\";\nimport * as mongoose from \"mongoose\";\n\nexport type TodoModel = mongoose.Document & {\n  description: String,\n  completed: Boolean\n};\n\nconst todoItemSchema = new mongoose.Schema({\n  description: String,\n  completed: { type: Boolean, default: false }\n}, { timestamps: true });\n\n/**\n * Password hash middleware.\n */\n// userSchema.pre(\"save\", function save(next) {\n//   const user = this;\n//   if (!user.isModified(\"password\")) { return next(); }\n//   bcrypt.genSalt(10, (err, salt) => {\n//     if (err) { return next(err); }\n//     bcrypt.hash(user.password, salt, undefined, (err: mongoose.Error, hash) => {\n//       if (err) { return next(err); }\n//       user.password = hash;\n//       next();\n//     });\n//   });\n// });\n\n// userSchema.methods.comparePassword = function (candidatePassword: string, cb: (err: any, isMatch: any) => {}) {\n//   bcrypt.compare(candidatePassword, this.password, (err: mongoose.Error, isMatch: boolean) => {\n//     cb(err, isMatch);\n//   });\n// };\n\n\n/**\n * Helper method for getting user's gravatar.\n */\n// userSchema.methods.gravatar = function (size: number) {\n//   if (!size) {\n//     size = 200;\n//   }\n//   if (!this.email) {\n//     return `https://gravatar.com/avatar/?s=${size}&d=retro`;\n//   }\n//   const md5 = crypto.createHash(\"md5\").update(this.email).digest(\"hex\");\n//   return `https://gravatar.com/avatar/${md5}?s=${size}&d=retro`;\n// };\n\n// export const User: UserType = mongoose.model<UserType>('User', userSchema);\nconst TodoItem = mongoose.model(\"TodoItem\", todoItemSchema);\nexport default TodoItem;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"c6adde4dc2f2bb093a1015eda6f2945ba81f0401"}
,"/Users/alexbatis/Desktop/node-express-ts/src/models/mongo/User.ts": {"path":"/Users/alexbatis/Desktop/node-express-ts/src/models/mongo/User.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":19},"end":{"line":22,"column":24}},"5":{"start":{"line":26,"column":0},"end":{"line":43,"column":3}},"6":{"start":{"line":27,"column":17},"end":{"line":27,"column":21}},"7":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"8":{"start":{"line":29,"column":8},"end":{"line":29,"column":22}},"9":{"start":{"line":31,"column":4},"end":{"line":42,"column":7}},"10":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"11":{"start":{"line":33,"column":12},"end":{"line":33,"column":29}},"12":{"start":{"line":35,"column":8},"end":{"line":41,"column":11}},"13":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"14":{"start":{"line":37,"column":16},"end":{"line":37,"column":33}},"15":{"start":{"line":39,"column":12},"end":{"line":39,"column":33}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":19}},"17":{"start":{"line":44,"column":0},"end":{"line":48,"column":2}},"18":{"start":{"line":45,"column":4},"end":{"line":47,"column":7}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"20":{"start":{"line":52,"column":0},"end":{"line":61,"column":2}},"21":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"22":{"start":{"line":54,"column":8},"end":{"line":54,"column":19}},"23":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":64}},"25":{"start":{"line":59,"column":16},"end":{"line":59,"column":73}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":66}},"27":{"start":{"line":63,"column":13},"end":{"line":63,"column":47}},"28":{"start":{"line":64,"column":0},"end":{"line":64,"column":23}}},"fnMap":{"0":{"name":"save","decl":{"start":{"line":26,"column":32},"end":{"line":26,"column":36}},"loc":{"start":{"line":26,"column":43},"end":{"line":43,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":23},"end":{"line":31,"column":24}},"loc":{"start":{"line":31,"column":38},"end":{"line":42,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":52},"end":{"line":35,"column":53}},"loc":{"start":{"line":35,"column":67},"end":{"line":41,"column":9}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":37},"end":{"line":44,"column":38}},"loc":{"start":{"line":44,"column":70},"end":{"line":48,"column":1}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":53},"end":{"line":45,"column":54}},"loc":{"start":{"line":45,"column":71},"end":{"line":47,"column":5}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":30},"end":{"line":52,"column":31}},"loc":{"start":{"line":52,"column":46},"end":{"line":61,"column":1}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"1":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"2":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{"line":36,"column":12},"end":{"line":38,"column":13}}],"line":36},"3":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{"line":53,"column":4},"end":{"line":55,"column":5}}],"line":53},"4":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{"line":56,"column":4},"end":{"line":58,"column":5}}],"line":56}},"s":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":5,"18":0,"19":0,"20":5,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":5,"28":5},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"User.js","sourceRoot":"","sources":["User.ts"],"names":[],"mappings":";;AAAA,wCAAwC;AACxC,iCAAiC;AACjC,qCAAqC;AA4BrC,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACrC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;IACrC,QAAQ,EAAE,MAAM;IAChB,kBAAkB,EAAE,MAAM;IAC1B,oBAAoB,EAAE,IAAI;IAE1B,QAAQ,EAAE,MAAM;IAChB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,KAAK;IAEb,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,MAAM;QACf,OAAO,EAAE,MAAM;KAChB;CACF,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB;;GAEG;AACH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,IAAI;IACvC,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAAC,CAAC;IACpD,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,GAAmB,EAAE,IAAI,EAAE,EAAE;YACxE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,UAAU,iBAAyB,EAAE,EAAkC;IAC1G,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAmB,EAAE,OAAgB,EAAE,EAAE;QACzF,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAGF;;GAEG;AACH,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,UAAU,IAAY;IAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACV,IAAI,GAAG,GAAG,CAAC;IACb,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,kCAAkC,IAAI,UAAU,CAAC;IAC1D,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtE,MAAM,CAAC,+BAA+B,GAAG,MAAM,IAAI,UAAU,CAAC;AAChE,CAAC,CAAC;AAEF,8EAA8E;AAC9E,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAChD,kBAAe,IAAI,CAAC","sourcesContent":["import * as bcrypt from \"bcrypt-nodejs\";\nimport * as crypto from \"crypto\";\nimport * as mongoose from \"mongoose\";\n\nexport type UserModel = mongoose.Document & {\n  email: string,\n  password: string,\n  passwordResetToken: string,\n  passwordResetExpires: Date,\n\n  facebook: string,\n  tokens: AuthToken[],\n\n  profile: {\n    name: string,\n    gender: string,\n    location: string,\n    website: string,\n    picture: string\n  },\n\n  comparePassword: (candidatePassword: string, cb: (err: any, isMatch: any) => {}) => void,\n  gravatar: (size: number) => string\n};\n\nexport type AuthToken = {\n  accessToken: string,\n  kind: string\n};\n\nconst userSchema = new mongoose.Schema({\n  email: { type: String, unique: true },\n  password: String,\n  passwordResetToken: String,\n  passwordResetExpires: Date,\n\n  facebook: String,\n  twitter: String,\n  google: String,\n  tokens: Array,\n\n  profile: {\n    name: String,\n    gender: String,\n    location: String,\n    website: String,\n    picture: String\n  }\n}, { timestamps: true });\n\n/**\n * Password hash middleware.\n */\nuserSchema.pre(\"save\", function save(next) {\n  const user = this;\n  if (!user.isModified(\"password\")) { return next(); }\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) { return next(err); }\n    bcrypt.hash(user.password, salt, undefined, (err: mongoose.Error, hash) => {\n      if (err) { return next(err); }\n      user.password = hash;\n      next();\n    });\n  });\n});\n\nuserSchema.methods.comparePassword = function (candidatePassword: string, cb: (err: any, isMatch: any) => {}) {\n  bcrypt.compare(candidatePassword, this.password, (err: mongoose.Error, isMatch: boolean) => {\n    cb(err, isMatch);\n  });\n};\n\n\n/**\n * Helper method for getting user's gravatar.\n */\nuserSchema.methods.gravatar = function (size: number) {\n  if (!size) {\n    size = 200;\n  }\n  if (!this.email) {\n    return `https://gravatar.com/avatar/?s=${size}&d=retro`;\n  }\n  const md5 = crypto.createHash(\"md5\").update(this.email).digest(\"hex\");\n  return `https://gravatar.com/avatar/${md5}?s=${size}&d=retro`;\n};\n\n// export const User: UserType = mongoose.model<UserType>('User', userSchema);\nconst User = mongoose.model(\"User\", userSchema);\nexport default User;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"41a64f2d984cba101aeb47354a725cefba842571"}
}
